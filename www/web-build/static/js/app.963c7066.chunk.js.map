{"version":3,"sources":["index.js","webpack:///./src/style.css?7163","src/style.css","src/l10n.js","src/index.js"],"names":["useQili","apiKey","api","undefined","registerRootComponent","require","default","content","__esModule","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","globalThis","l10n","Proxy","get","target","key","App","_jsx","Provider","storage","children","View","style","flex","Login","Required","Container","_ref","NativeRouter","Routes","Route","path","element","Home","_React$useState","React","useState","_React$useState2","_slicedToArray","accessTokens","setAccessTokens","_React$useState3","_React$useState4","token","setLatestToken","_React$useState5","_React$useState6","creating","setCreating","getAccessTokens","useCallback","_asyncToGenerator","Qili","fetch","query","me","useEffect","_jsxs","padding","alignItems","marginBottom","marginTop","Pressable","onPress","e","Text","color","height","map","_ref3","name","type","hiddenID","createdAt","flexDirection","variables","changed","_toConsumableArray","splice","flexGrow","ShowHelpers","AccessTokenGenerator","position","bottom","width","backgroundColor","onCancel","onSubmit","_ref5","find","a","generateAccessToken","_x","apply","arguments","_ref6","_React$useState7","_React$useState8","setName","margin","textAlign","TextInput","borderBottomColor","borderBottomWidth","value","onChangeText","text","Button","title","props","_React$useState9","_React$useState10","helpers","setHelpers","refresh","timer","setInterval","clearInterval","_objectSpread","length","join"],"mappings":"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","file":"static/js/app.963c7066.chunk.js","sourcesContent":["import { registerRootComponent } from 'expo';\nimport useQili from \"react-native-use-qili\"\nuseQili({\n    apiKey:\"bridge\",\n    api:__DEV__ ? \"http://localhost:9080/1/graphql\" : undefined\n})\n\nregisterRootComponent(require('./src').default)\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body{\\r\\n    width: 600px;\\r\\n    margin: auto;\\r\\n    border: 1px solid gray;\\r\\n    background: black;\\r\\n}\\r\\n#root{\\r\\n    background-color: white;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nexport default globalThis.l10n=new Proxy({},{\n    get(target, key){\n        return key\n    }\n})","import \"./style.css\"\r\nimport \"./l10n\"\r\nimport React from \"react\"\r\nimport {View, Pressable, Text, TextInput, Button} from \"react-native\"\r\nimport { NativeRouter, Route, Routes} from \"react-router-native\"\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {Qili, Provider}  from \"react-native-use-qili/store\"\r\nimport Login from \"react-native-use-qili/components/Login\"\r\n\r\nexport default function App(){\r\n    return (\r\n        <Provider {...{storage}}>\r\n            <View style={{flex:1}}>\r\n                <Login.Required Container={({children})=>children}>\r\n                    <NativeRouter>\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<Home/>}/>\r\n                        </Routes>\r\n                    </NativeRouter>\r\n                </Login.Required>\r\n            </View>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nfunction Home(){\r\n    const [accessTokens, setAccessTokens]=React.useState([])\r\n    const [token, setLatestToken]=React.useState(\"\")\r\n    const [creating, setCreating]=React.useState(false)\r\n    const getAccessTokens=React.useCallback(async ()=>{\r\n        const {accessTokens}=(await Qili.fetch({\r\n            query:`{\r\n                me{\r\n                  accessTokens {\r\n                    name\r\n                    type\r\n                    createdAt\r\n                    updatedAt\r\n                    hiddenID\r\n                  }\r\n                }\r\n              }`\r\n        })).me\r\n        setAccessTokens(accessTokens)\r\n    },[setAccessTokens])\r\n\r\n    React.useEffect(()=>{\r\n        getAccessTokens()\r\n    },[])\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <View style={{padding:10}}>\r\n                <View style={{alignItems:\"center\", marginBottom:20,marginTop:20}}>\r\n                    <Pressable onPress={e=>setCreating(true)}>\r\n                        <Text style={{color:\"blue\"}}>Generate Access Token</Text>\r\n                    </Pressable>\r\n                </View>\r\n\r\n                <View style={{height:50,alignItems:\"center\"}}>{!!token && <Text> {token}</Text>}</View>\r\n\r\n                {accessTokens.map(({name, type, hiddenID, createdAt}, i)=>(\r\n                    <View key={`${type}-${name}`} style={{flex:1, flexDirection:\"row\", marginBottom:10}}>\r\n                        <Text style={{flex:1}}>{name}: {hiddenID}</Text>\r\n                        <Text style={{flex:1}}>{createdAt}</Text>\r\n                        <Pressable style={{flex:1}} onPress={async ()=>{\r\n                            await Qili.fetch({\r\n                                query:`mutation($type:String, $name:String!){\r\n                                    removeAccessToken(type:$type, name:$name)\r\n                                }`,\r\n                                variables:{type, name}\r\n                            })\r\n                            const changed=[...accessTokens]\r\n                            changed.splice(i,1)\r\n                            setAccessTokens(changed)\r\n                        }}>\r\n                            <Text style={{color:\"blue\"}}>Remove</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                ))}\r\n            </View>\r\n\r\n\r\n            <View style={{flexGrow:1}}/>\r\n                <ShowHelpers/>\r\n                {!!creating && <AccessTokenGenerator \r\n                    style={{position:\"absolute\",bottom:0,width:\"100%\",padding:20, backgroundColor:\"gray\"}}\r\n                    onCancel={e=>setCreating(false)}\r\n                    onSubmit={async name=>{\r\n                        debugger\r\n                        if(!accessTokens.find(a=>a.name==name)){\r\n                            const {generateAccessToken:token}=await Qili.fetch({\r\n                                query:`mutation($type:String, $name:String!){\r\n                                    generateAccessToken(type:$type, name:$name)\r\n                                }`,\r\n                                variables:{name}\r\n                            })\r\n                            setLatestToken(token)\r\n                            getAccessTokens()\r\n                            setCreating(false)\r\n                        }\r\n                    }}\r\n                />}\r\n            </View>\r\n    )\r\n}\r\n\r\nfunction AccessTokenGenerator({onCancel, onSubmit, style}){\r\n    const [name, setName]=React.useState(\"\")\r\n    return (\r\n        <View style={[{flex:1},style]}>\r\n            <View style={{alignItems:\"center\", margin:10}}>\r\n                <Text>Generate Access Token</Text>\r\n            </View>\r\n            <View style={{flex:1, flexDirection:\"row\",margin:10}}>\r\n                <Text style={{width:100, textAlign:\"right\",padding:10}}>name:</Text>\r\n                <TextInput style={{flexGrow:1, height:\"auto\", borderBottomColor:\"white\", borderBottomWidth:1}} \r\n                    value={name}\r\n                    onChangeText={text=>setName(text)}/>\r\n            </View>\r\n            <View style={{flex:1, flexDirection:\"row\", margin:10}}>\r\n                <View style={{flex:1, alignItems:\"center\"}} >\r\n                    <Button title=\"cancel\" onPress={e=>onCancel?.()}/>\r\n                </View>\r\n                <View style={{flex:1, alignItems:\"center\"}} >\r\n                    <Button title=\"submit\"  onPress={e=>onSubmit?.(name)}/>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nfunction ShowHelpers(props){\r\n    const [helpers, setHelpers]=React.useState([])\r\n    const refresh=React.useCallback(async ()=>{\r\n        const {me:{helpers}}=Qili.fetch({\r\n            query:`query{me{helpers}}`\r\n        })\r\n        setHelpers(helpers)\r\n    },[])\r\n    React.useEffect(()=>{\r\n        const timer=setInterval(refresh,60*1000)\r\n        return ()=>clearInterval(timer)\r\n    },[])\r\n\r\n\r\n    return (\r\n        <Pressable onPress={refresh}>\r\n            <Text {...props}>\r\n                {helpers.length>0 && `You are helping under names: [${helpers.join(\",\")}]` || \" \"}\r\n            </Text>\r\n        </Pressable>\r\n    )\r\n}"],"sourceRoot":""}