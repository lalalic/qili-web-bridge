{"version":3,"sources":["index.js","src/index.js","webpack:///./src/style.css?2727","src/style.css"],"names":["useQili","apiKey","api","registerRootComponent","require","default","App","storage","style","flex","Required","path","element","Home","React","useState","accessTokens","setAccessTokens","token","setLatestToken","creating","setCreating","getAccessTokens","useCallback","Qili","fetch","query","me","useEffect","padding","alignItems","marginBottom","marginTop","onPress","e","color","height","map","i","name","type","hiddenID","createdAt","flexDirection","variables","changed","splice","flexGrow","AccessTokenGenerator","position","bottom","width","backgroundColor","onCancel","onSubmit","find","a","generateAccessToken","setName","margin","textAlign","borderBottomColor","borderBottomWidth","value","onChangeText","text","title","content","__esModule","module","options","exports","locals","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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","file":"static/js/app.29837fc5.chunk.js","sourcesContent":["import { registerRootComponent } from 'expo';\nimport useQili from \"react-native-use-qili\"\nuseQili({\n    apiKey:\"bridge\",\n    api:\"http://localhost:9080/1/graphql\"\n})\n\nregisterRootComponent(require('./src').default)\n","import \"./style.css\"\r\nimport React from \"react\"\r\nimport {View, Pressable, Text, TextInput, Button, Modal} from \"react-native\"\r\nimport { NativeRouter, Route, Routes} from \"react-router-native\"\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {Qili, Provider}  from \"react-native-use-qili/store\"\r\nimport Login from \"react-native-use-qili/components/Login\"\r\n\r\nexport default function App(){\r\n    return (\r\n        <Provider {...{storage}}>\r\n            <View style={{flex:1}}>\r\n                <Login.Required>\r\n                    <NativeRouter>\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<Home/>}/>\r\n                        </Routes>\r\n                    </NativeRouter>\r\n                </Login.Required>\r\n            </View>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nfunction Home(){\r\n    const [accessTokens, setAccessTokens]=React.useState([])\r\n    const [token, setLatestToken]=React.useState(\"\")\r\n    const [creating, setCreating]=React.useState(false)\r\n    const getAccessTokens=React.useCallback(async ()=>{\r\n        const {accessTokens}=(await Qili.fetch({\r\n            query:`{\r\n                me{\r\n                  accessTokens {\r\n                    name\r\n                    type\r\n                    createdAt\r\n                    updatedAt\r\n                    hiddenID\r\n                  }\r\n                }\r\n              }`\r\n        })).me\r\n        setAccessTokens(accessTokens)\r\n    },[setAccessTokens])\r\n\r\n    React.useEffect(()=>{\r\n        getAccessTokens()\r\n    },[])\r\n    return (\r\n        <View style={{flex:1}}>\r\n            <View style={{padding:10}}>\r\n                <View style={{alignItems:\"center\", marginBottom:20,marginTop:20}}>\r\n                    <Pressable onPress={e=>setCreating(true)}>\r\n                        <Text style={{color:\"blue\"}}>Generate Access Token</Text>\r\n                    </Pressable>\r\n                </View>\r\n\r\n                <View style={{height:50,alignItems:\"center\"}}>{!!token && <Text> {token}</Text>}</View>\r\n\r\n                {accessTokens.map(({name, type, hiddenID, createdAt}, i)=>(\r\n                    <View key={`${type}-${name}`} style={{flex:1, flexDirection:\"row\", marginBottom:10}}>\r\n                        <Text style={{flex:1}}>{name}: {hiddenID}</Text>\r\n                        <Text style={{flex:1}}>{createdAt}</Text>\r\n                        <Pressable style={{flex:1}} onPress={async ()=>{\r\n                            await Qili.fetch({\r\n                                query:`mutation($type:String, $name:String!){\r\n                                    removeAccessToken(type:$type, name:$name)\r\n                                }`,\r\n                                variables:{type, name}\r\n                            })\r\n                            const changed=[...accessTokens]\r\n                            changed.splice(i,1)\r\n                            setAccessTokens(changed)\r\n                        }}>\r\n                            <Text style={{color:\"blue\"}}>Remove</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                ))}\r\n            </View>\r\n\r\n            <View style={{flexGrow:1}}/>\r\n    \r\n            {!!creating && <AccessTokenGenerator \r\n                style={{position:\"absolute\",bottom:0,width:\"100%\",padding:20, backgroundColor:\"gray\"}}\r\n                onCancel={e=>setCreating(false)}\r\n                onSubmit={async name=>{\r\n                    debugger\r\n                    if(!accessTokens.find(a=>a.name==name)){\r\n                        const {generateAccessToken:token}=await Qili.fetch({\r\n                            query:`mutation($type:String, $name:String!){\r\n                                generateAccessToken(type:$type, name:$name)\r\n                            }`,\r\n                            variables:{name}\r\n                        })\r\n                        setLatestToken(token)\r\n                        getAccessTokens()\r\n                    }\r\n                }}\r\n            />}\r\n        </View>\r\n    )\r\n}\r\n\r\nfunction AccessTokenGenerator({onCancel, onSubmit, style}){\r\n    const [name, setName]=React.useState(\"\")\r\n    return (\r\n        <View style={[{flex:1},style]}>\r\n            <View style={{alignItems:\"center\", margin:10}}>\r\n                <Text>Generate Access Token</Text>\r\n            </View>\r\n            <View style={{flex:1, flexDirection:\"row\",margin:10}}>\r\n                <Text style={{width:100, textAlign:\"right\",padding:10}}>name:</Text>\r\n                <TextInput style={{flexGrow:1, height:\"auto\", borderBottomColor:\"white\", borderBottomWidth:1}} \r\n                    value={name}\r\n                    onChangeText={text=>setName(text)}/>\r\n            </View>\r\n            <View style={{flex:1, flexDirection:\"row\", margin:10}}>\r\n                <View style={{flex:1, alignItems:\"center\"}} >\r\n                    <Button title=\"cancel\" onPress={e=>onCancel?.()}/>\r\n                </View>\r\n                <View style={{flex:1, alignItems:\"center\"}} >\r\n                    <Button title=\"submit\"  onPress={e=>onSubmit?.(name)}/>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}","var api = require(\"!../../../../../../usr/local/share/.config/yarn/global/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../usr/local/share/.config/yarn/global/node_modules/css-loader/dist/cjs.js!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../usr/local/share/.config/yarn/global/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body{\\r\\n    width: 600px;\\r\\n    margin: auto;\\r\\n    border: 1px solid gray;\\r\\n    background: black;\\r\\n}\\r\\n#root{\\r\\n    background-color: white;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}