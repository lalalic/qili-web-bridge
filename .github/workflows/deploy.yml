name: export-updates
on:
  push:
    branches: [ master ]

jobs: 
  versions:
    runs-on: ubuntu-latest
    steps:
    - run: sudo apt-get install -y sshpass
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - run: |
        git checkout HEAD^
        echo "::set-output name=last::$(node -p 'require(`./package.json`).version')"
        git checkout master
        echo "::set-output name=current::$(node -p 'require(`./package.json`).version')" 
      id: versions
    - run: echo "${{steps.versions.outputs.last}},${{steps.versions.outputs.current}} "

  deploy:
    needs: versions
    if: ${{ needs.versions.outputs.last !=  needs.versions.outputs.current}}
    environment: deploy
    runs-on: ubuntu-latest
    env:
      DEPLOY_HOST: ${{ secrets.SERVER_HOST }}
      DEPLOY_USER: ${{ secrets.SERVER_USER }}
      QILI_APP: parrot
      QILI_UPDATES: updates
      production: true
    steps: 
    - name: deploy cloud code to qili2
      run: | 
          export SSHPASS=${{ secrets.SERVER_PASS }}
          sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r www/web-build/* "$DEPLOY_USER@$DEPLOY_HOST:/data/apps/bridge/www"
          sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null package.json "$DEPLOY_USER@$DEPLOY_HOST:/data/apps/bridge"
          sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null index.js "$DEPLOY_USER@$DEPLOY_HOST:/data/apps/bridge"
          sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null qili.conf.js "$DEPLOY_USER@$DEPLOY_HOST:/data/apps/bridge"
          sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null yarn.lock "$DEPLOY_USER@$DEPLOY_HOST:/data/apps/bridge"
          sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null nginx.conf "$DEPLOY_USER@$DEPLOY_HOST:/data/apps/bridge"
    #sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "./qili.travis.deploy.sh"

